% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sparse-pc-spectrum.R
\name{sparse_pc_spectrum}
\alias{sparse_pc_spectrum}
\alias{sparse_pc_spectrum.sparse_fr_spectrum}
\alias{sparse_pc_spectrum.list}
\alias{sparse_pc_spectrum.default}
\alias{sparse_pc_spectrum.pi_chord}
\title{Sparse pitch-class spectrum}
\usage{
sparse_pc_spectrum(x, ...)

\method{sparse_pc_spectrum}{sparse_fr_spectrum}(x, coherent = FALSE, ...)

\method{sparse_pc_spectrum}{list}(x, ...)

\method{sparse_pc_spectrum}{default}(x, ...)

\method{sparse_pc_spectrum}{pi_chord}(x, amplitude = 1, coherent = FALSE, ...)
}
\arguments{
\item{x}{Input sonority.}

\item{...}{
  Arguments passed on to \code{\link[=expand_harmonics]{expand_harmonics}}
  \describe{
    \item{\code{num_harmonics}}{(Integerish scalar)
Number of harmonics (including the fundamental) to which
each tone should be expanded.}
    \item{\code{roll_off_dB}}{(Numeric scalar) Parametrises the amount of amplitude roll-off
in the harmonics, with greater values corresponding to higher roll-off.}
    \item{\code{digits}}{Number of digits to which each partial's MIDI pitch should be rounded.}
    \item{\code{label_harmonics}}{If TRUE, then the harmonics in the resulting spectrum are labelled with their harmonic numbers.}
    \item{\code{octave_ratio}}{The octave ratio for stretching and compressing harmonics, defaults to 2.0.}
  }}

\item{coherent}{Whether the amplitudes from different spectral components should be combined
assuming coherent summation, where the amplitudes simply add together
(default is \code{FALSE}).
Otherwise incoherent summation is used, where the amplitudes are squared, added, then
square rooted.}

\item{amplitude}{(Numeric vector)
Vector of amplitudes to assign to each pitch.
If a scalar value is provided, this value is assigned to all pitches}
}
\value{
An object of class \code{sparse_pc_spectrum}.
}
\description{
This function represents an input object as a sparse pitch-class spectrum.
}
\details{
A sparse pitch-class spectrum describes an input sonority as a finite set
of spectral components, each defined by a
pitch class (expressed as numbers in the range [0, 12))
and an amplitude (expressed in arbitrary units, but with the
fundamental frequencies of chord pitches typically taking the value 1).

A sparse pitch-class spectrum is most easily created by coercion from
a different chord representation. If a numeric vector is provided as the input,
it is treated as a \code{pi_chord} representation, for example
\code{sparse_pc_spectrum(c(60, 64, 67))} will create a sparse pitch-class spectrum
by expanding the harmonics implied by a C major triad.

A sparse pitch-class spectrum can also be created directly by providing a list
with two elements, the first being labelled "pc", and the second labelled "amplitude",
each of which being numeric vectors of the same length.
In this case no harmonic expansion is performed.
The first element will be taken as a vector of pitches,
and the second element will be taken as a vector of corresponding amplitudes.
For example, one might write
\code{sparse_pc_spectrum(list(pitch = c(0, 4, 7), amplitude = c(3, 1, 2)))}.
}
